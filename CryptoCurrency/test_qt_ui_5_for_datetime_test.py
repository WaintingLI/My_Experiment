# Form implementation generated from reading ui file 'test.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import datetime
import threading
from PyQt6 import QtCore, QtGui, QtWidgets

import connect_account_order_test_core


class Ui_Form(object):
    def setupUi(self, Form:QtWidgets.QWidget):
        Form.setObjectName("Form")
        Form.resize(892, 567)
        Form.setFixedSize(Form.width(), Form.height())
        self.Back_test_Button = QtWidgets.QPushButton(parent=Form)
        self.Back_test_Button.setGeometry(QtCore.QRect(340, 70, 75, 23))
        self.Back_test_Button.setObjectName("Back_test_Button")
        self.label_2 = QtWidgets.QLabel(parent=Form)
        self.label_2.setGeometry(QtCore.QRect(40, 100, 71, 21))
        self.label_2.setObjectName("label_2")
        self.End_dateTimeEdit = QtWidgets.QDateTimeEdit(parent=Form)
        self.End_dateTimeEdit.setGeometry(QtCore.QRect(140, 100, 161, 22))
        self.End_dateTimeEdit.setObjectName("End_dateTimeEdit")
        self.Start_dateTimeEdit = QtWidgets.QDateTimeEdit(parent=Form)
        self.Start_dateTimeEdit.setGeometry(QtCore.QRect(140, 70, 161, 20))
        self.Start_dateTimeEdit.setTime(QtCore.QTime(13, 0, 0))
        self.Start_dateTimeEdit.setObjectName("Start_dateTimeEdit")
        self.label = QtWidgets.QLabel(parent=Form)
        self.label.setGeometry(QtCore.QRect(40, 60, 81, 38))
        self.label.setObjectName("label")
        self.textBrowser = QtWidgets.QTextBrowser(parent=Form)
        self.textBrowser.setGeometry(QtCore.QRect(30, 160, 841, 381))
        self.textBrowser.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.CursorShape.ArrowCursor))
        self.textBrowser.setObjectName("textBrowser")
        self.label_3 = QtWidgets.QLabel(parent=Form)
        self.label_3.setGeometry(QtCore.QRect(40, 10, 51, 20))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(18)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.widget = QtWidgets.QWidget(parent=Form)
        self.widget.setGeometry(QtCore.QRect(690, 40, 121, 51))
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.radioButton_1 = QtWidgets.QRadioButton(parent=self.widget)
        self.radioButton_1.setObjectName("radioButton_1")
        self.verticalLayout.addWidget(self.radioButton_1)
        self.radioButton_2 = QtWidgets.QRadioButton(parent=self.widget)
        self.radioButton_2.setObjectName("radioButton_2")
        self.verticalLayout.addWidget(self.radioButton_2)
        self.lineEdit = QtWidgets.QLineEdit(parent=Form)
        self.lineEdit.setGeometry(QtCore.QRect(130, 10, 431, 21))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(parent=Form)
        self.lineEdit_2.setGeometry(QtCore.QRect(130, 40, 431, 21))
        self.lineEdit_2.setClearButtonEnabled(False)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_4 = QtWidgets.QLabel(parent=Form)
        self.label_4.setGeometry(QtCore.QRect(20, 40, 91, 20))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(18)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)
        self.thread = threading.Thread(target=self.conduct_proce)
        self.thread.daemon = True
        #thread.start()

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.Back_test_Button.setText(_translate("Form", "開始"))
        self.label_2.setText(_translate("Form", "End Date Time"))
        self.End_dateTimeEdit.setDisplayFormat(_translate("Form", "yyyy/M/d  hh:mm:ss"))
        self.Start_dateTimeEdit.setDisplayFormat(_translate("Form", "yyyy/M/d  hh:mm:ss"))
        self.label.setText(_translate("Form", "Start Date Time"))
        self.label_3.setText(_translate("Form", "API"))
        self.radioButton_1.setText(_translate("Form", "連接實體帳戶"))
        self.radioButton_2.setText(_translate("Form", "模擬回測"))
        self.label_4.setText(_translate("Form", "SECRET"))
        self.lineEdit_2.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.Back_test_Button.clicked.connect(lambda:self.Show_data())
        self.End_dateTimeEdit.setDateTime(QtCore.QDateTime().currentDateTime())
        
    def Show_data(self):
        get_datetime = self.Start_dateTimeEdit.text()
        get_datetime_c = datetime.datetime.strptime(get_datetime,"%Y/%m/%d  %H:%M:%S")
        get_datetime_c_str = get_datetime_c.strftime("%Y-%m-%d  %H:%M:%S")
        connect_account_order_test_core.Start_time_str = str(get_datetime_c.strftime("%Y-%m-%d  %H:%M:%S"))
        output_message = "起始日期:"+ get_datetime_c_str 
        get_datetime = self.End_dateTimeEdit.text()
        get_datetime_c = datetime.datetime.strptime(get_datetime,"%Y/%m/%d  %H:%M:%S")
        get_datetime_c.strftime("%Y-%m-%d  %H:%M:%S")
        get_datetime_c_str = get_datetime_c.strftime("%Y-%m-%d  %H:%M:%S")
        connect_account_order_test_core.End_time_str = str(get_datetime_c.strftime("%Y-%m-%d  %H:%M:%S"))
        output_message = output_message+ "~ 結束日期:"+ get_datetime_c_str 
        #2019-01-01 0:0:0.0
        #送出的信息
        
        self.textBrowser.append(output_message)
        #print("get_datetime_c =",get_datetime_c,type(get_datetime_c))
        #connect_account_order_test_core.main_function()
        self.Back_test_Button.setDisabled(True)
        while True:
            if not self.thread.is_alive():
                self.thread = None
                self.thread = threading.Thread(target=self.conduct_proce)
                self.thread.daemon = True
                break
            print("thread.is_alive")
        self.thread.start()
    
    def conduct_proce(self):
        connect_account_order_test_core.main_function()
        self.Back_test_Button.setDisabled(False)
         
        
        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec())
